{%- if production.event.repository -%}
{%- assign repo_dir = production.event.repository.directory -%}
{%- else -%}
{%- assign repo_dir = "." -%}
{%- endif -%}
{%- if production.meta['likelihood'] contains "calibration" -%}
{%- assign calibration_on = production.meta['likelihood']['calibration']['sample'] -%}
{%- else -%}
{%- assign calibration_on = True %}
{%- endif -%}
{%- assign meta = production.meta -%}
{%- assign sampler = production.meta['sampler'] -%}
{%- assign scheduler = production.meta['scheduler'] -%}
{%- assign likelihood = production.meta['likelihood'] -%}
{%- assign priors = production.meta['priors'] -%}
{%- assign data = production.meta['data'] -%}
{%- assign quality = production.meta['quality'] -%}
{%- assign ifos = production.meta['interferometers'] -%}

{%- if data contains "calibration" %}
{%- if calibration_on %}
{%- if data['calibration'] contains ifos[0] %}
################################################################################
## Calibration arguments
################################################################################
calibration-model=CubicSpline
spline-calibration-envelope-dict={ {% for ifo in ifos %}{{ifo}}:{{data['calibration'][ifo]}},{% endfor %} }
spline-calibration-nodes=10
spline-calibration-amplitude-uncertainty-dict=None
spline-calibration-phase-uncertainty-dict=None
{%- if priors contains 'calibration' %}
calibration-prior-boundary={{ priors['calibration']['boundary'] | default: reflective }}
{%- endif %}
{%- endif %}
{%- endif %}
{%- endif %}

################################################################################
## Data generation arguments
################################################################################

ignore-gwpy-data-quality-check=True
gps-tuple=None
gps-file=None
timeslide-file=None
timeslide-dict=None
trigger-time={{ production.meta['event time'] }}
gaussian-noise=False
n-simulation=0
{%- if data['data files'].size > 0 %}
data-dict={ {% for ifo in ifos %}{{ifo}}:{{data['data files'][ifo]}},{% endfor %} }
{%- else %}
data-dict=None
{%- endif %}
data-format={{ data['format'] | default: "gwf" }}
channel-dict={ {% for ifo in ifos %}{{data['channels'][ifo]}},{% endfor %} }
frame-type-dict={ {% for ifo in ifos %}{{ifo}}:{{data['frame types'][ifo]}},{% endfor %} }

################################################################################
## Detector arguments
################################################################################

coherence-test={{ likelihood['coherence test'] | default: "False" }}
detectors={{ ifos }}
duration={{ data['segment length'] }}
generation-seed=42
psd-dict={ {% for ifo in ifos %}{{ifo}}:{{production.psds[ifo]}},{% endfor %} }
psd-fractional-overlap=0.5
post-trigger-duration={{ likelihood['post trigger time'] | default: 2.0 }}
sampling-frequency={{ likelihood['sample rate'] | round }}
psd-length={{ likelihood['psd length'] | round }}
psd-maximum-duration=1024
psd-method=median
psd-start-time=None
minimum-frequency={ {% for ifo in ifos %}{{ifo}}:{{quality['minimum frequency'][ifo]}},{% endfor %}{% if likelihood contains 'start frequency'%} waveform: {{ likelihood['start frequency'] }} {% endif %} }
maximum-frequency={ {% for ifo in ifos %}{{ifo}}:{{quality['maximum frequency'][ifo]}},{% endfor %} }
zero-noise=False
tukey-roll-off={{ likelihood['roll off time'] | default: 0.4 }}
resampling-method=lal

################################################################################
## Injection arguments
################################################################################

injection=False
injection-dict=None
injection-file=None
injection-numbers=None
injection-waveform-approximant=None

################################################################################
## Job submission arguments
################################################################################

{%- if scheduler contains "accounting group" %}
accounting={{ scheduler['accounting group'] }}
accounting_user = {{ config['condor']['user'] }}
{%- else %}
accounting=not.required.here
accounting_user = {{ config['condor']['user'] }}
{%- endif %}
label={{ production.name }}
local=False
local-generation={{ scheduler['local generation'] | default: False }}
local-plot=False
outdir={{ production.rundir }}
periodic-restart-time={{ scheduler['periodic restart time'] | default: 28800 }}
request-memory={{ scheduler['request memory'] | default: 4.0}}
request-memory-generation={{ scheduler['request generation memory'] | default: None }}
request-cpus={{ scheduler['request cpus'] | default: 1 }}
request-disk={{ scheduler['request disk'] | default: 1 }}
scheduler={{ scheduler['type'] | default: "condor" }}
scheduler-args=None
scheduler-module=None
scheduler-env=None
transfer-files={% if scheduler['osg'] %}True{% else %}{{ scheduler['transfer files'] | default: True }}{% endif %}
log-directory=None
online-pe=False
osg={{ scheduler['osg'] | default: False }}
desired-sites={{ scheduler['desired sites'] | default: None }}

################################################################################
## Likelihood arguments
################################################################################
