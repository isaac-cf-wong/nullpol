[build-system]
requires = ["flit_core >=2,<4"]
build-backend = "flit_core.buildapi"

[project]
name =  "nullpol"
description = "A package to perform model-independent polarization test of gravitational-wave signals."
authors = [{name="Isaac C.F. Wong",email="chunfung.wong@kuleuven.be"},
           {name="Thomas Ng"},
           {name="BalÃ¡zs Cirok"}]
readme = "README.rst"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.10"
dynamic = ["version"]
dependencies = [
    "matplotlib",
    "numpy<=2.0",
    "bilby",
    "bilby_pipe<=1.4.2",
    "gwpy",
    "numba",
    "rocket-fft",
    "scipy",
    "ConfigArgParse",
    "pycbc",
    "healpy",
    "cbcflow",
    "h5py",
    "pandas",
]

[project.optional-dependencies]
spark = [
    "pyspark>=3.0.0"
]
test = [
    "black==25.1.0",
    "check-manifest==0.50",
    "pre-commit==4.1.0",
    "pytest-cov==6.0.0",
    "pytest-mock<3.14.1",
    "pytest==8.3.4",
    "pytest-github-actions-annotate-failures",
    "ruff==0.12.7"
]

[project.urls]
Documentation = "https://git.ligo.org/bayesian-null-stream/nullpol/docs"
Source = "https://git.ligo.org/bayesian-null-stream/nullpol"
Tracker = "https://git.ligo.org/bayesian-null-stream/nullpol/-/issues"

[tool.flit.module]
name = "nullpol"

[tool.black]
line-length = 120
fast = true

[tool.ruff]
exclude = ["docs"]

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F403", "F405"]  # Allow star imports in __init__.py files

[tool.coverage.run]
branch = true

[tool.coverage.report]
fail_under = 80

[tool.pyright]
include = ["src"]
exclude = [
    "**/node_modules",
    "**/__pycache__",
]

reportMissingImports = true
reportMissingTypeStubs = false

pythonVersion = "3.10"
pythonPlatform = "Linux"

executionEnvironments = [
  { root = "src" }
]

[tool.pytest.ini_options]
addopts = "--cov-report xml:coverage.xml --cov src --cov-fail-under 0 --cov-append -m 'not integration'"
pythonpath = [
  "src"
]
testpaths = "tests"
junit_family = "xunit2"
markers = [
    "integration: marks as integration test",
    "notebooks: marks as notebook test",
    "gpu: marks as gpu test",
    "spark: marks tests which need Spark",
    "slow: marks tests as slow",
    "unit: fast offline tests",
]

[project.scripts]
nullpol_create_injection = "nullpol.tools.create_injection:main"
nullpol_create_time_frequency_filter_from_sample = "nullpol.tools.create_time_frequency_filter_from_sample:main"
nullpol_pipe = "nullpol.tools.main:main"
nullpol_pipe_analysis = "nullpol.tools.data_analysis:main"
nullpol_pipe_generation = "nullpol.tools.data_generation:main"
nullpol_pipe_write_default_ini = "nullpol.tools.parser:main"
nullpol_get_asimov_yaml = "nullpol.tools.get_asimov_yaml:main"

[project.entry-points.'asimov.pipelines']
nullpol = "nullpol.asimov.asimov:Nullpol"

[project.entry-points.'asimov.hooks.postmonitor']
tgrflow = 'nullpol.asimov.tgrflow:Collector'

[project.entry-points.'asimov.hooks.applicator']
tgrflow = 'nullpol.asimov.tgrflow:Applicator'
